/*
 * Created on 2025-09-24 ( 23:19:46 )
 * Generated by Telosys ( https://www.telosys.org/ ) version 4.2.0
 */
package org.demo.persistence.entities;


import java.io.Serializable;
import javax.persistence.*;

/**
 * JPA entity class for "Administrateur"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="administrateur", schema="public", catalog="memoire_database" )
@IdClass(AdministrateurId.class)
public class Administrateur implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- PRIMARY KEY 
    @Id
    @Column(name="idutilisateur", nullable=false)
    private int        idutilisateur ;

    @Id
    @Column(name="idadmin", nullable=false)
    private int        idadmin ;

    //--- OTHER DATA FIELDS 
    @Column(name="codedaccess")
    private Integer    codedaccess ;

    //--- LINKS ( RELATIONSHIPS )
    @ManyToOne
    @JoinColumn(name="idutilisateur", referencedColumnName="idutilisateur", insertable=false, updatable=false)
    private Utilisateur utilisateur ; 

    /**
     * Constructor
     */
    public Administrateur() {
		super();
    }
    
    public void setIdutilisateur( int idutilisateur ) {
        this.idutilisateur = idutilisateur ;
    }
    public int getIdutilisateur() {
        return this.idutilisateur;
    }

    public void setIdadmin( int idadmin ) {
        this.idadmin = idadmin ;
    }
    public int getIdadmin() {
        return this.idadmin;
    }

    public void setCodedaccess( Integer codedaccess ) {
        this.codedaccess = codedaccess ;
    }
    public Integer getCodedaccess() {
        return this.codedaccess;
    }

    public Utilisateur getUtilisateur() {
        return this.utilisateur;
    } 

	@Override
	public String toString() { 
		String separator = "|";
		StringBuilder sb = new StringBuilder();
		sb.append("Administrateur[");
		sb.append("idutilisateur=").append(idutilisateur);
		sb.append(separator).append("idadmin=").append(idadmin);
		sb.append(separator).append("codedaccess=").append(codedaccess);
		sb.append("]");
		return sb.toString();
	}

}
