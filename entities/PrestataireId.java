/*
 * Created on 2025-09-24 ( 23:19:50 )
 * Generated by Telosys ( https://www.telosys.org/ ) version 4.2.0
 */
package org.demo.persistence.entities;

import java.io.Serializable;


/**
 * Composite primary key for entity "Prestataire" ( stored in table "prestataire" )
 *
 * @author Telosys
 *
 */
public class PrestataireId implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY KEY ATTRIBUTES 
    private int        idutilisateur ;
    
    private String     idprestataire ;
    
    /**
     * Constructor
     */
    public PrestataireId() {
        super();
    }

    /**
     * Constructor with values
     * @param idutilisateur 
     * @param idprestataire 
     */
    public PrestataireId( Integer idutilisateur, String idprestataire ) {
        super();
        this.idutilisateur = idutilisateur ;
        this.idprestataire = idprestataire ;
    }
    
    //--- GETTERS & SETTERS FOR KEY FIELDS
    public void setIdutilisateur( int value ) {
        this.idutilisateur = value;
    }
    public int getIdutilisateur() {
        return this.idutilisateur;
    }

    public void setIdprestataire( String value ) {
        this.idprestataire = value;
    }
    public String getIdprestataire() {
        return this.idprestataire;
    }


	@Override
	public boolean equals(Object obj) { 
		if ( this == obj ) return true ; 
		if ( obj == null ) return false ;
		if ( this.getClass() != obj.getClass() ) return false ; 
		PrestataireId other = (PrestataireId) obj; 
		//--- Attribute idutilisateur
		if ( idutilisateur != other.idutilisateur ) return false ; 
		//--- Attribute idprestataire
		if ( idprestataire == null ) { 
			if ( other.idprestataire != null ) 
				return false ; 
		} else if ( ! idprestataire.equals(other.idprestataire) ) 
			return false ; 
		return true; 
	} 
	@Override
	public int hashCode() { 
		final int prime = 31; 
		int result = 1; 
		
		//--- Attribute idutilisateur
		result = prime * result + idutilisateur;
		//--- Attribute idprestataire
		result = prime * result + ((idprestataire == null) ? 0 : idprestataire.hashCode() ) ; 
		
		return result; 
	} 
	@Override
	public String toString() { 
		String separator = "|";
		StringBuilder sb = new StringBuilder();
		sb.append("Prestataire[");
		sb.append("idutilisateur=").append(idutilisateur);
		sb.append(separator).append("idprestataire=").append(idprestataire);
		sb.append("]");
		return sb.toString();
	}

}
